{"version":3,"sources":["../src/cm-rule.js"],"names":["define","$","Templates","Str","DialogueBase","Dialogue","initWithCourse","prototype","constructor","apply","Object","create","_render","initWithCourseJson","JSON","stringify","get_string","then","title","render","initwithcoursejson","html","js","setTitle","_setDialogueContent","runTemplateJS","center","find","on","e","resource","trigger","close","bind","init","preventDefault","node","target","closest","d","cm","course","val","contextid","text","M","util","contextname","name","coursename","shortname","addClass","show"],"mappings":"AAuBAA,OAAM,oBAAC,CAAC,QAAD,CAAW,gBAAX,CAA6B,UAA7B,CAAyC,wBAAzC,CAAD,CAAqE,SAASC,CAAT,CAAYC,CAAZ,CAAuBC,CAAvB,CAA4BC,CAA5B,CAA0C,CAWjH,QAASC,CAAAA,CAAT,CAAkBC,CAAlB,CAAkC,CAC9B,KAAKA,cAAL,CAAsBA,CAAc,EAAI,IAAxC,CACAF,CAAY,CAACG,SAAb,CAAuBC,WAAvB,CAAmCC,KAAnC,CAAyC,IAAzC,CAA+C,EAA/C,CACH,CACDJ,CAAQ,CAACE,SAAT,CAAqBG,MAAM,CAACC,MAAP,CAAcP,CAAY,CAACG,SAA3B,CAArB,CACAF,CAAQ,CAACE,SAAT,CAAmBC,WAAnB,CAAiCH,CAAjC,CAOAA,CAAQ,CAACE,SAAT,CAAmBK,OAAnB,CAA6B,UAAW,CACpC,GAAIC,CAAAA,CAAkB,CAAGC,IAAI,CAACC,SAAL,CAAe,KAAKT,cAApB,CAAzB,CACA,MAAOH,CAAAA,CAAG,CAACa,UAAJ,CAAe,YAAf,CAA6B,UAA7B,EAAyCC,IAAzC,CACH,SAASC,CAAT,CAAgB,CACZ,MAAOhB,CAAAA,CAAS,CAACiB,MAAV,CAAiB,sBAAjB,CAAyC,CAC5CC,kBAAkB,CAAEP,CADwB,CAAzC,EAEJI,IAFI,CAGH,SAASI,CAAT,CAAeC,CAAf,CAAmB,CACf,KAAKC,QAAL,CAAcL,CAAd,EACA,KAAKM,mBAAL,CAAyBH,CAAzB,EACAnB,CAAS,CAACuB,aAAV,CAAwBH,CAAxB,EACA,KAAKI,MAAL,GACA,KAAKC,IAAL,CA/BqB,8BA+BrB,EAA8CC,EAA9C,CACI,aADJ,CAEI,SAASC,CAAT,CAAYC,CAAZ,CAAsB,CAClB,KAAKC,OAAL,CAAa,aAAb,CAA4BD,CAA5B,EACA,KAAKE,KAAL,EACH,CAHD,CAGEC,IAHF,CAGO,IAHP,CAFJ,CAOH,CAZD,CAYEA,IAZF,CAYO,IAZP,CAHG,CAiBV,CAlBD,CAkBEA,IAlBF,CAkBO,IAlBP,CADG,CAqBV,CAvBD,CAuDA,MAAO,CACHC,IAAI,CA1BR,SAAc5B,CAAd,CAA8B,CAC1BL,CAAC,qBAAD,CAAoB2B,EAApB,CAAuB,OAAvB,CAnD0B,iCAmD1B,CAAyD,SAASC,CAAT,CAAY,CACjEA,CAAC,CAACM,cAAF,GACA,GAAIC,CAAAA,CAAI,CAAGnC,CAAC,CAAC4B,CAAC,CAACQ,MAAH,CAAD,CAAYC,OAAZ,CAtDG,0BAsDH,CAAX,CACA,GAAI,CAACF,CAAL,CAAW,CACP,MACH,CAED,GAAIG,CAAAA,CAAC,CAAG,GAAIlC,CAAAA,CAAJ,CAAaC,CAAb,CAAR,CACAiC,CAAC,CAACX,EAAF,CAAK,aAAL,CAAoB,SAASC,CAAT,CAAYC,CAAZ,CAAsB,IAClCU,CAAAA,CAAE,CAAGV,CAAQ,CAACU,EADoB,CAElCC,CAAM,CAAGX,CAAQ,CAACW,MAFgB,CAGtCL,CAAI,CAACT,IAAL,CAAU,oBAAV,EAAgCe,GAAhC,CAAoCF,CAAE,CAACG,SAAvC,EACAP,CAAI,CAACT,IAAL,CAAU,cAAV,EAA0BiB,IAA1B,CACIC,CAAC,CAACC,IAAF,CAAO9B,UAAP,CAAkB,sBAAlB,CAA0C,UAA1C,CAAsD,CAClD+B,WAAW,CAAEP,CAAE,CAACQ,IADkC,CAElDC,UAAU,CAAER,CAAM,CAACS,SAF+B,CAAtD,CADJ,EAMAd,CAAI,CAACe,QAAL,CAAc,QAAd,CACH,CAXD,EAYAZ,CAAC,CAACa,IAAF,EACH,CArBD,CAsBH,CAEM,CAGV,CAjFK,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Course module rule.\n *\n * @package    block_xp\n * @author     Frédéric Massart <fred@branchup.tech>\n * @copyright  2018 Frédéric Massart\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/templates', 'core/str', 'block_xp/dialogue-base'], function($, Templates, Str, DialogueBase) {\n    var SELECTOR_WRAPPER = '.block-xp-filters';\n    var SELECTOR_WIDGET = '.block_xp-cm-rule-widget';\n    var SELECTOR_WIDGET_TRIGGER = '.block_xp-cm-rule-widget button';\n    var SELECTOR_RESOURCE_SELECTOR_WRAPPER = '.block_xp-cm-selector-widget';\n\n    /**\n     * The dialogue.\n     *\n     * @param {Object} [initWithCourse] The course to initialise with.\n     */\n    function Dialogue(initWithCourse) {\n        this.initWithCourse = initWithCourse || null;\n        DialogueBase.prototype.constructor.apply(this, []);\n    }\n    Dialogue.prototype = Object.create(DialogueBase.prototype);\n    Dialogue.prototype.constructor = Dialogue;\n\n    /**\n     * Render.\n     *\n     * @return {Promise} The promise.\n     */\n    Dialogue.prototype._render = function() {\n        var initWithCourseJson = JSON.stringify(this.initWithCourse);\n        return Str.get_string('cmselector', 'block_xp').then(\n            function(title) {\n                return Templates.render('block_xp/cm-selector', {\n                    initwithcoursejson: initWithCourseJson\n                }).then(\n                    function(html, js) {\n                        this.setTitle(title);\n                        this._setDialogueContent(html);\n                        Templates.runTemplateJS(js);\n                        this.center();\n                        this.find(SELECTOR_RESOURCE_SELECTOR_WRAPPER).on(\n                            'cm-selected',\n                            function(e, resource) {\n                                this.trigger('cm-selected', resource);\n                                this.close();\n                            }.bind(this)\n                        );\n                    }.bind(this)\n                );\n            }.bind(this)\n        );\n    };\n\n    /**\n     * Initialise the widgets.\n     *\n     * @param {Object} [initWithCourse] The course to initialise with.\n     */\n    function init(initWithCourse) {\n        $(SELECTOR_WRAPPER).on('click', SELECTOR_WIDGET_TRIGGER, function(e) {\n            e.preventDefault();\n            var node = $(e.target).closest(SELECTOR_WIDGET);\n            if (!node) {\n                return;\n            }\n\n            var d = new Dialogue(initWithCourse);\n            d.on('cm-selected', function(e, resource) {\n                var cm = resource.cm;\n                var course = resource.course;\n                node.find('.cm-rule-contextid').val(cm.contextid);\n                node.find('.cm-selected').text(\n                    M.util.get_string('rulecmdescwithcourse', 'block_xp', {\n                        contextname: cm.name,\n                        coursename: course.shortname\n                    })\n                );\n                node.addClass('has-cm');\n            });\n            d.show();\n        });\n    }\n\n    return {\n        init: init\n    };\n});\n"],"file":"cm-rule.min.js"}