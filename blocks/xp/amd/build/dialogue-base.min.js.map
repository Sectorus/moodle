{"version":3,"sources":["../src/dialogue-base.js"],"names":["define","$","Y","Str","DialogueBase","_eventNode","deferred","Deferred","_ready","promise","use","_init","then","resolve","bind","prototype","_dialogue","_title","center","centerDialogue","loading","Node","create","M","util","image_url","d","core","dialogue","draggable","modal","width","origHide","hide","apply","arguments","destroy","getStdModNode","WidgetStdMod","HEADER","prepend","_updateDialogueTitle","_setDialogueContent","_render","fail","get_string","a","always","txt","close","trigger","find","selector","BODY","getDOMNode","on","type","callback","show","e","content","setStdModContent","REPLACE","setTitle","title","extraArgs","one","setHTML"],"mappings":"AA0BAA,OAAM,0BAAC,CAAC,QAAD,CAAW,UAAX,CAAuB,UAAvB,CAAD,CAAqC,SAASC,CAAT,CAAYC,CAAZ,CAAeC,CAAf,CAAoB,CAM3D,QAASC,CAAAA,CAAT,EAAwB,CACpB,KAAKC,UAAL,CAAkBJ,CAAC,CAAC,OAAD,CAAnB,CACA,GAAIK,CAAAA,CAAQ,CAAGL,CAAC,CAACM,QAAF,EAAf,CACA,KAAKC,MAAL,CAAcF,CAAQ,CAACG,OAAT,EAAd,CACAP,CAAC,CAACQ,GAAF,CACI,0BADJ,CAEI,UAAW,CACP,KAAKC,KAAL,GAAaC,IAAb,CAAkB,UAAW,CACzBN,CAAQ,CAACO,OAAT,EACH,CAFD,CAGH,CAJD,CAIEC,IAJF,CAIO,IAJP,CAFJ,CAQH,CAEDV,CAAY,CAACW,SAAb,CAAuBC,SAAvB,CAAmC,IAAnC,CACAZ,CAAY,CAACW,SAAb,CAAuBV,UAAvB,CAAoC,IAApC,CACAD,CAAY,CAACW,SAAb,CAAuBP,MAAvB,CAAgC,IAAhC,CACAJ,CAAY,CAACW,SAAb,CAAuBE,MAAvB,CAAgC,UAAhC,CAKAb,CAAY,CAACW,SAAb,CAAuBG,MAAvB,CAAgC,UAAW,CACvC,KAAKF,SAAL,CAAeG,cAAf,EACH,CAFD,CASAf,CAAY,CAACW,SAAb,CAAuBJ,KAAvB,CAA+B,UAAW,CACtC,GAAIL,CAAAA,CAAQ,CAAGL,CAAC,CAACM,QAAF,EAAf,CACIa,CAAO,CAAGlB,CAAC,CAACmB,IAAF,CAAOC,MAAP,CAAc,+CAA8CC,CAAC,CAACC,IAAF,CAAOC,SAAP,CAAiB,WAAjB,CAA9C,CAA8E,kBAA5F,CADd,CAEIC,CAFJ,CAKAA,CAAC,CAAG,GAAIH,CAAAA,CAAC,CAACI,IAAF,CAAOC,QAAX,CAAoB,CACpBC,SAAS,GADW,CAEpBC,KAAK,GAFe,CAGpBC,KAAK,CAAE,OAHa,CAApB,CAAJ,CAKA,KAAKf,SAAL,CAAiBU,CAAjB,CAGA,GAAIM,CAAAA,CAAQ,CAAGN,CAAC,CAACO,IAAjB,CACAP,CAAC,CAACO,IAAF,CAAS,UAAW,CAChBD,CAAQ,CAACE,KAAT,CAAeR,CAAf,CAAkBS,SAAlB,EACA,KAAKC,OAAL,EACH,CAHQ,CAGPtB,IAHO,CAGFY,CAHE,CAAT,CAMAA,CAAC,CAACW,aAAF,CAAgBnC,CAAC,CAACoC,YAAF,CAAeC,MAA/B,EAAuCC,OAAvC,CAA+CtC,CAAC,CAACmB,IAAF,CAAOC,MAAP,CAAc,MAAd,CAA/C,EACA,KAAKmB,oBAAL,GACA,KAAKC,mBAAL,CAAyBtB,CAAzB,EACAd,CAAQ,CAACO,OAAT,GAGA,KAAK8B,OAAL,GAAeC,IAAf,CACI,UAAW,CACPzC,CAAG,CAAC0C,UAAJ,CAAe,OAAf,CAAwB,MAAxB,EACKjC,IADL,CACU,SAASkC,CAAT,CAAY,CACd,MAAOA,CAAAA,CACV,CAHL,EAIKF,IAJL,CAIU,UAAW,CACb,MAAO,EACV,CANL,EAOKG,MAPL,CAQQ,SAASC,CAAT,CAAc,CACV,KAAKN,mBAAL,CAAyBM,CAAzB,CACH,CAFD,CAEElC,IAFF,CAEO,IAFP,CARR,CAYH,CAbD,CAaEA,IAbF,CAaO,IAbP,CADJ,EAkBA,MAAOR,CAAAA,CAAQ,CAACG,OAAT,EACV,CA9CD,CAgDAL,CAAY,CAACW,SAAb,CAAuBkC,KAAvB,CAA+B,UAAW,CACtC,KAAKC,OAAL,CAAa,iBAAb,EACA,KAAKlC,SAAL,CAAeoB,OAAf,GACA,KAAK/B,UAAL,CAAkB,IACrB,CAJD,CAYAD,CAAY,CAACW,SAAb,CAAuBoC,IAAvB,CAA8B,SAASC,CAAT,CAAmB,CAC7C,MAAOnD,CAAAA,CAAC,CAAC,KAAKe,SAAL,CAAeqB,aAAf,CAA6BnC,CAAC,CAACoC,YAAF,CAAee,IAA5C,EAAkDC,UAAlD,EAAD,CAAD,CAAkEH,IAAlE,CAAuEC,CAAvE,CACV,CAFD,CAUAhD,CAAY,CAACW,SAAb,CAAuBwC,EAAvB,CAA4B,SAASC,CAAT,CAAeC,CAAf,CAAyB,CACjD,KAAKpD,UAAL,CAAgBkD,EAAhB,CAAmBC,CAAnB,CAAyBC,CAAzB,CACH,CAFD,CAUArD,CAAY,CAACW,SAAb,CAAuB4B,OAAvB,CAAiC,UAAW,CAE3C,CAFD,CASAvC,CAAY,CAACW,SAAb,CAAuB2C,IAAvB,CAA8B,SAASC,CAAT,CAAY,CACtC,KAAKnD,MAAL,CAAYI,IAAZ,CACI,UAAW,CACP,KAAKI,SAAL,CAAe0C,IAAf,CAAoBC,CAApB,CACH,CAFD,CAEE7C,IAFF,CAEO,IAFP,CADJ,CAKH,CAND,CAaAV,CAAY,CAACW,SAAb,CAAuB2B,mBAAvB,CAA6C,SAASkB,CAAT,CAAkB,CAC3D,KAAK5C,SAAL,CAAe6C,gBAAf,CAAgC3D,CAAC,CAACoC,YAAF,CAAee,IAA/C,CAAqDO,CAArD,CAA8D1D,CAAC,CAACoC,YAAF,CAAewB,OAA7E,CACH,CAFD,CASA1D,CAAY,CAACW,SAAb,CAAuBgD,QAAvB,CAAkC,SAASC,CAAT,CAAgB,CAC9C,KAAK/C,MAAL,CAAc+C,CAAd,CACA,KAAKvB,oBAAL,EACH,CAHD,CAWArC,CAAY,CAACW,SAAb,CAAuBmC,OAAvB,CAAiC,SAASM,CAAT,CAAeS,CAAf,CAA0B,CACvD,KAAK5D,UAAL,CAAgB6C,OAAhB,CAAwBM,CAAxB,CAA8BS,CAA9B,CACH,CAFD,CAOA7D,CAAY,CAACW,SAAb,CAAuB0B,oBAAvB,CAA8C,UAAW,CACrD,GAAI,CAAC,KAAKzB,SAAV,CAAqB,CACjB,MACH,CAED,KAAKA,SAAL,CACKqB,aADL,CACmBnC,CAAC,CAACoC,YAAF,CAAeC,MADlC,EAEK2B,GAFL,CAES,IAFT,EAGKC,OAHL,CAGa,KAAKlD,MAHlB,CAIH,CATD,CAWA,MAAOb,CAAAA,CACV,CAlLK,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Generic dialogue base.\n *\n * This is originally a copy of block_stash/dialogue-base.\n *\n * @package    block_xp\n * @copyright  2018 Frédéric Massart\n * @author     Frédéric Massart <fred@branchup.tech>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/yui', 'core/str'], function($, Y, Str) {\n    /**\n     * Constructor.\n     *\n     * Override it to inject your arguments.\n     */\n    function DialogueBase() {\n        this._eventNode = $('<div>');\n        var deferred = $.Deferred();\n        this._ready = deferred.promise();\n        Y.use(\n            'moodle-core-notification',\n            function() {\n                this._init().then(function() {\n                    deferred.resolve();\n                });\n            }.bind(this)\n        );\n    }\n\n    DialogueBase.prototype._dialogue = null;\n    DialogueBase.prototype._eventNode = null;\n    DialogueBase.prototype._ready = null;\n    DialogueBase.prototype._title = '&hellip;';\n\n    /**\n     * Center the dialogue on screen.\n     */\n    DialogueBase.prototype.center = function() {\n        this._dialogue.centerDialogue();\n    };\n\n    /**\n     * Initialise the things.\n     *\n     * @return {Void}\n     */\n    DialogueBase.prototype._init = function() {\n        var deferred = $.Deferred(),\n            loading = Y.Node.create('<p style=\"text-align: center;\"><img src=\"' + M.util.image_url('y/loading') + '\" alt=\"\"></p>'),\n            d;\n\n        // New dialogue.\n        d = new M.core.dialogue({\n            draggable: true,\n            modal: true,\n            width: '600px'\n        });\n        this._dialogue = d;\n\n        // Destroy on hide.\n        var origHide = d.hide;\n        d.hide = function() {\n            origHide.apply(d, arguments);\n            this.destroy();\n        }.bind(d);\n\n        // Set content.\n        d.getStdModNode(Y.WidgetStdMod.HEADER).prepend(Y.Node.create('<h1>'));\n        this._updateDialogueTitle();\n        this._setDialogueContent(loading);\n        deferred.resolve();\n\n        // Render the things.\n        this._render().fail(\n            function() {\n                Str.get_string('error', 'core')\n                    .then(function(a) {\n                        return a;\n                    })\n                    .fail(function() {\n                        return '';\n                    })\n                    .always(\n                        function(txt) {\n                            this._setDialogueContent(txt);\n                        }.bind(this)\n                    );\n            }.bind(this)\n        );\n\n        // Return the promise.\n        return deferred.promise();\n    };\n\n    DialogueBase.prototype.close = function() {\n        this.trigger('dialogue-closed');\n        this._dialogue.destroy();\n        this._eventNode = null;\n    };\n\n    /**\n     * Find a node in this Dialog.\n     *\n     * @param {String} selector The selector.\n     * @return {jQuery}\n     */\n    DialogueBase.prototype.find = function(selector) {\n        return $(this._dialogue.getStdModNode(Y.WidgetStdMod.BODY).getDOMNode()).find(selector);\n    };\n\n    /**\n     * Registers an event listener.\n     *\n     * @param {String} type The event type.\n     * @param {Function} callback The callback, receives Event and extraArgs.\n     */\n    DialogueBase.prototype.on = function(type, callback) {\n        this._eventNode.on(type, callback);\n    };\n\n    /**\n     * Render mechanics.\n     *\n     * This is the method to override to set the content of the dialogue.\n     * It must be non-blocking. Also do not forget to center the dialogue.\n     */\n    DialogueBase.prototype._render = function() {\n        // Nothing here.\n    };\n\n    /**\n     * Initialise the things.\n     *\n     * @param {Event} e The event.\n     */\n    DialogueBase.prototype.show = function(e) {\n        this._ready.then(\n            function() {\n                this._dialogue.show(e);\n            }.bind(this)\n        );\n    };\n\n    /**\n     * Set the dialogue content.\n     *\n     * @param {String} content The HTML content.\n     */\n    DialogueBase.prototype._setDialogueContent = function(content) {\n        this._dialogue.setStdModContent(Y.WidgetStdMod.BODY, content, Y.WidgetStdMod.REPLACE);\n    };\n\n    /**\n     * Set the dialogue title.\n     *\n     * @param {String} title The title.\n     */\n    DialogueBase.prototype.setTitle = function(title) {\n        this._title = title;\n        this._updateDialogueTitle();\n    };\n\n    /**\n     * Triggers an event.\n     *\n     * @param {String} type The event type.\n     * @param {Mixed} extraArgs The extra argument.\n     */\n    DialogueBase.prototype.trigger = function(type, extraArgs) {\n        this._eventNode.trigger(type, extraArgs);\n    };\n\n    /**\n     * Update the dialogue title.\n     */\n    DialogueBase.prototype._updateDialogueTitle = function() {\n        if (!this._dialogue) {\n            return;\n        }\n\n        this._dialogue\n            .getStdModNode(Y.WidgetStdMod.HEADER)\n            .one('h1')\n            .setHTML(this._title);\n    };\n\n    return DialogueBase;\n});\n"],"file":"dialogue-base.min.js"}